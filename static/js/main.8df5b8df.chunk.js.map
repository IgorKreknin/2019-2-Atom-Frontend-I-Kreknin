{"version":3,"sources":["Styles/WeatherComponent.module.css","Styles/mainStyles.module.css","Styles/AddButton.module.css","Components/AddButton.jsx","Components/WeatherComponent.jsx","Components/WeatherContainer.jsx","serviceWorker.js","index.js"],"names":["module","exports","WeatherComponent","state","value","_onAddButtonClick","bind","className","styles","addButton","React","Component","props","data","city","location","temperature","component","main","mainAbout","mainAboutCity","this","mainAboutLocation","mainTemperature","mainTemperatureIcon","mainTemperatureText","footer","footerAbout","footerTemperature","WeatherContainer","components","_onSubmit","_onChange","navigator","geolocation","getCurrentPosition","position","src","coords","latitude","longitude","fetch","then","response","json","console","log","event","preventDefault","localState","setState","target","onSubmit","type","onChange","Boolean","window","hostname","match","localStorage","setItem","JSON","stringify","ReactDOM","render","bodyStyle","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,UAAY,oCAAoC,cAAgB,wCAAwC,kBAAoB,4CAA4C,gBAAkB,0CAA0C,oBAAsB,8CAA8C,oBAAsB,8CAA8C,OAAS,iCAAiC,YAAc,sCAAsC,kBAAoB,4CAA4C,UAAY,sC,wBCA9kBD,EAAOC,QAAU,CAAC,UAAY,gC,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mNCG9CC,E,YACpB,aAAe,IAAD,8BACb,+CACKC,MAAQ,CACZC,MAAO,IAGR,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBANZ,E,iFAUb,OAAO,I,+BAIP,OACC,6BACC,0BAAMC,UAAYC,IAAOC,iB,GAjBiBC,IAAMC,W,gBCA/BT,E,YACpB,WAAYU,GAAQ,IAAD,sBAClB,8CADkB,IAEVC,EAASD,EAATC,KAFU,OAGlB,EAAKV,MAAQ,CACZW,KAAMD,EAAKC,KACXC,SAAUF,EAAKE,SACfC,YAAaH,EAAKG,aAND,E,sEAWlB,OACC,yBAAKT,UAAYC,IAAOS,WACvB,yBAAKV,UAAYC,IAAOU,MACvB,yBAAKX,UAAYC,IAAOW,WACvB,yBAAKZ,UAAYC,IAAOY,eAAkBC,KAAKlB,MAAMW,MACrD,yBAAKP,UAAYC,IAAOc,mBAAsBD,KAAKlB,MAAMY,WAE1D,yBAAKR,UAAYC,IAAOe,iBACvB,yBAAKhB,UAAYC,IAAOgB,sBACxB,yBAAKjB,UAAYC,IAAOiB,qBAAwBJ,KAAKlB,MAAMa,eAG7D,yBAAKT,UAAYC,IAAOkB,QACvB,yBAAKnB,UAAYC,IAAOmB,aAAxB,gBACA,yBAAKpB,UAAYC,IAAOoB,mBAAxB,c,GA1ByClB,IAAMC,WCD/BkB,E,YACpB,aAAe,IAAD,8BACb,+CAEK1B,MAAQ,CACZ2B,WAAY,GACZ1B,MAAO,IAGR,EAAK2B,UAAY,EAAKA,UAAUzB,KAAf,gBACjB,EAAK0B,UAAY,EAAKA,UAAU1B,KAAf,gBATJ,E,iFAab2B,UAAUC,YAAYC,oBAAmB,SAASC,GACjD,IAAIC,EAAM,gDAAkDD,EAASE,OAAOC,SAAW,QAAUH,EAASE,OAAOE,UAAY,0CAC7HC,MAAMJ,GACJK,MAAK,SAASC,GAAU,OAAOA,EAASC,UACxCF,MAAK,SAAS7B,GACdgC,QAAQC,IAAIjC,W,gCAKNkC,GACTA,EAAMC,iBAEN,IAAIX,EAAM,8CAAiDhB,KAAKlB,MAAMC,MAAQ,0CAE9EyC,QAAQC,IAAIT,GAEZ,IAAIY,EAAa5B,KAAKlB,MACtB8C,EAAW7C,MAAQ,GACnBiB,KAAK6B,SAASD,GAEdR,MAAMJ,GAAKK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAS7B,GAC1DgC,QAAQC,IAAIjC,Q,gCAIJkC,GACT,IAAIE,EAAa5B,KAAKlB,MACtB8C,EAAW7C,MAAQ2C,EAAMI,OAAO/C,MAChCiB,KAAK6B,SAASD,K,+BAId,OACC,6BACC,0BAAMG,SAAW/B,KAAKU,WACrB,2BAAOsB,KAAK,OAAOjD,MAAQiB,KAAKlB,MAAMC,MAAQkD,SAAWjC,KAAKW,YAC9D,2BAAOqB,KAAK,YAEb,6BACC,kBAAC,EAAD,CAAkBxC,KAAM,CAAE,KAAQ,uCAAU,YAAe,KAAM,SAAY,0CAC7E,kBAAC,EAAD,CAAkBA,KAAM,CAAE,KAAQ,iCAAS,YAAe,KAAM,SAAY,0CAC5E,kBAAC,EAAD,CAAkBA,KAAM,CAAE,KAAQ,6CAAW,YAAe,KAAM,SAAY,gD,GAxDrCH,IAAMC,WCShC4C,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAASC,MACvB,2DCTNC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU,CAC/C,CACI,GAAM,OACN,KAAQ,UACR,QAAW,KACX,MAAS,CACN,IAAO,UACP,IAAO,YAGT,CACH,GAAM,OACN,KAAQ,SACR,QAAW,KACX,MAAS,CACP,IAAO,UACP,IAAO,YAGX,CACG,GAAM,QACJ,KAAQ,yBACR,QAAW,KACX,MAAS,CACR,IAAO,UACP,IAAO,KAGT,CACE,GAAM,OACN,KAAQ,uBACR,QAAW,KACX,MAAS,CACP,IAAO,UACP,IAAO,YAGX,CACE,GAAM,QACN,KAAQ,oBACR,QAAW,KACX,MAAS,CACP,IAAO,GACP,IAAO,KAGX,CACE,GAAM,QACN,KAAQ,YACR,QAAW,KACX,MAAS,CACP,IAAO,UACP,IAAO,YAGX,CACE,GAAM,OACN,KAAQ,QACR,QAAW,KACX,MAAS,CACP,IAAO,UACP,IAAO,YAGX,CACE,GAAM,QACN,KAAQ,SACR,QAAW,KACX,MAAS,CACP,KAAQ,UACR,IAAO,WAGX,CACE,GAAM,OACN,KAAQ,cACR,QAAW,KACX,MAAS,CACP,IAAO,UACP,IAAO,YAGX,CACE,GAAM,OACN,KAAQ,gCACR,QAAW,KACX,MAAS,CACP,IAAO,QACP,IAAO,eAKjBC,IAASC,OACR,yBAAKzD,UAAYC,IAAOyD,WACvB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDwBnB,kBAAmBlC,WACrBA,UAAUmC,cAAcC,MAAM3B,MAAK,SAAA4B,GACjCA,EAAaC,kB","file":"static/js/main.8df5b8df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"WeatherComponent_main__2Jb3R\",\"mainAbout\":\"WeatherComponent_mainAbout__3JAK_\",\"mainAboutCity\":\"WeatherComponent_mainAboutCity__FahMw\",\"mainAboutLocation\":\"WeatherComponent_mainAboutLocation__280hY\",\"mainTemperature\":\"WeatherComponent_mainTemperature__36Jjp\",\"mainTemperatureIcon\":\"WeatherComponent_mainTemperatureIcon__3TMYm\",\"mainTemperatureText\":\"WeatherComponent_mainTemperatureText__28Hct\",\"footer\":\"WeatherComponent_footer__1-8WX\",\"footerAbout\":\"WeatherComponent_footerAbout__y5mfK\",\"footerTemperature\":\"WeatherComponent_footerTemperature__1qIG0\",\"component\":\"WeatherComponent_component__3pmYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyStyle\":\"mainStyles_bodyStyle__2ZAxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"AddButton_addButton__3RbVL\",\"pulse\":\"AddButton_pulse__wqWsS\"};","import React from 'react'\nimport styles from '../Styles/AddButton.module.css'\n\n\nexport default class WeatherComponent extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tvalue: '',\t\t\n\t\t}\n\n\t\tthis._onAddButtonClick = this._onAddButtonClick.bind(this);\n\t}\n\n\t_onAddButtonClick() {\n\t\treturn 0;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<span className={ styles.addButton } />\n\t\t\t</div>\n\t\t)\n\t}\t\n}","import React from 'react'\nimport styles from '../Styles/WeatherComponent.module.css'\n\n\nexport default class WeatherComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tconst { data } = props\n\t\tthis.state = {\n\t\t\tcity: data.city,\n\t\t\tlocation: data.location,\n\t\t\ttemperature: data.temperature,\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className={ styles.component }>\n\t\t\t\t<div className={ styles.main }>\n\t\t\t\t\t<div className={ styles.mainAbout }>\n\t\t\t\t\t\t<div className={ styles.mainAboutCity }>{ this.state.city }</div>\n\t\t\t\t\t\t<div className={ styles.mainAboutLocation }>{ this.state.location }</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={ styles.mainTemperature }>\n\t\t\t\t\t\t<div className={ styles.mainTemperatureIcon }></div>\n\t\t\t\t\t\t<div className={ styles.mainTemperatureText }>{ this.state.temperature }</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={ styles.footer }>\n\t\t\t\t\t<div className={ styles.footerAbout }>Good weather</div>\n\t\t\t\t\t<div className={ styles.footerTemperature }>2/15</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\t\n}","import React from 'react'\nimport WeatherComponent from './WeatherComponent.jsx';\n\nexport default class WeatherContainer extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tcomponents: [],\n\t\t\tvalue: '',\n\t\t}\n\n\t\tthis._onSubmit = this._onSubmit.bind(this);\n\t\tthis._onChange = this._onChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tnavigator.geolocation.getCurrentPosition(function(position){\n\t\t\tlet src = \"https://mars.priver.org/data/2.5/weather?lat=\" + position.coords.latitude + \"&lon=\" + position.coords.longitude + \"&appid=b6907d289e10d714a6e88b30761fae22\";\n\t\t\tfetch(src)\n\t\t\t\t.then(function(response){return response.json()})\n\t\t\t\t.then(function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t})\n\t\t})\n\t}\n\n\t_onSubmit(event){\n\t\tevent.preventDefault();\n\n\t\tlet src = \"https://mars.priver.org/data/2.5/weather?q=\" +  this.state.value + \"&appid=b6907d289e10d714a6e88b30761fae22\";\n\n\t\tconsole.log(src);\n\n\t\tlet localState = this.state;\n\t\tlocalState.value = '';\n\t\tthis.setState(localState);\n\n\t\tfetch(src).then(response => response.json()).then(function(data){\n\t\t\tconsole.log(data);\n\t\t})\n\t}\n\n\t_onChange(event){\n\t\tlet localState = this.state;\n\t\tlocalState.value = event.target.value;\n\t\tthis.setState(localState);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={ this._onSubmit }>\n\t\t\t\t\t<input type='text' value={ this.state.value } onChange={ this._onChange }/>\n\t\t\t\t\t<input type='submit' />\n\t\t\t\t</form>\n\t\t\t\t<div>\n\t\t\t\t\t<WeatherComponent data={{ 'city': \"Москва\", 'temperature': \"23\", 'location': \"Россия\" }} />\n\t\t\t\t\t<WeatherComponent data={{ 'city': \"Дубна\", 'temperature': \"21\", 'location': \"Россия\" }} />\n\t\t\t\t\t<WeatherComponent data={{ 'city': \"Саратов\", 'temperature': \"10\", 'location': \"Россия\" }} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport styles from './Styles/mainStyles.module.css';\n//import App from './App';\nimport AddButton from './Components/AddButton.jsx';\nimport WeatherContainer from './Components/WeatherContainer.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nlocalStorage.setItem('Locations', JSON.stringify([\n\t\t{\n    \t\t\"id\": 519188,\n    \t\t\"name\": \"Novinki\",\n    \t\t\"country\": \"RU\",\n    \t\t\"coord\": {\n      \t\t\t\"lon\": 37.666668,\n      \t\t\t\"lat\": 55.683334\n        \t}\n  \t\t},\n  \t    {\n\t\t  \"id\": 707860,\n\t\t  \"name\": \"Hurzuf\",\n\t\t  \"country\": \"UA\",\n\t\t  \"coord\": {\n\t\t    \"lon\": 34.283333,\n\t\t    \"lat\": 44.549999\n\t\t  }\n\t\t},\n\t\t{\n    \t\"id\": 1283710,\n    \t  \"name\": \"Bāgmatī Zone\",\n    \t  \"country\": \"NP\",\n    \t  \"coord\": {\n      \t\t\"lon\": 85.416664,\n      \t\t\"lat\": 28\n    \t  }\n  \t\t},\n  \t\t  {\n  \t\t    \"id\": 529334,\n  \t\t    \"name\": \"Mar’ina Roshcha\",\n  \t\t    \"country\": \"RU\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": 37.611111,\n  \t\t      \"lat\": 55.796391\n  \t\t    }\n  \t\t  },\n  \t\t  {\n  \t\t    \"id\": 1269750,\n  \t\t    \"name\": \"Republic of India\",\n  \t\t    \"country\": \"IN\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": 77,\n  \t\t      \"lat\": 20\n  \t\t    }\n  \t\t  },\n  \t\t  {\n  \t\t    \"id\": 1283240,\n  \t\t    \"name\": \"Kathmandu\",\n  \t\t    \"country\": \"NP\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": 85.316666,\n  \t\t      \"lat\": 27.716667\n  \t\t    }\n  \t\t  },\n  \t\t  {\n  \t\t    \"id\": 703363,\n  \t\t    \"name\": \"Laspi\",\n  \t\t    \"country\": \"UA\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": 33.733334,\n  \t\t      \"lat\": 44.416668\n  \t\t    }\n  \t\t  },\n  \t\t  {\n  \t\t    \"id\": 3632308,\n  \t\t    \"name\": \"Merida\",\n  \t\t    \"country\": \"VE\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": -71.144997,\n  \t\t      \"lat\": 8.598333\n  \t\t    }\n  \t\t  },\n  \t\t  {\n  \t\t    \"id\": 473537,\n  \t\t    \"name\": \"Vinogradovo\",\n  \t\t    \"country\": \"RU\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": 38.545555,\n  \t\t      \"lat\": 55.423332\n  \t\t    }\n  \t\t  },\n  \t\t  {\n  \t\t    \"id\": 384848,\n  \t\t    \"name\": \"Qarah Gawl al ‘Ulyā\",\n  \t\t    \"country\": \"IQ\",\n  \t\t    \"coord\": {\n  \t\t      \"lon\": 45.6325,\n  \t\t      \"lat\": 35.353889\n  \t\t    }\n  \t\t  },\n\t]));\n\nReactDOM.render(\n\t<div className={ styles.bodyStyle }>\n\t\t<WeatherContainer />\n\t\t<AddButton />\n\t</div>, \n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}